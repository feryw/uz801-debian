name: Build debian
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      arch:
        description: "Target architecture"
        required: true
        default: 'armv7'
        type: choice
        options:
          - armv7
  
jobs:
  build:
    name: Build debian
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          sudo apt-get -y update
          sudo apt-get -y install debootstrap binfmt-support qemu-user-static android-sdk-libsparse-utils

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare repository
        run: git config --global --add safe.directory "$(pwd)"

      - name: Build
        run: |
          cd rootfs
          sudo ./build.sh
          sudo xz rootfs.img

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian
          path: |
            aboot/*.mbn
            kernel/*.img
            rootfs/rootfs.img.xz

      - name: Generate release tag
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NAME=$(echo "Debian $(cat rootfs/debian_version)-${{ github.run_number }}-${{ inputs.arch }}")
          TAG_NAME="$(cat rootfs/debian_version)-${{ inputs.arch }}_${{ github.run_number }}"
          gh release delete "$TAG_NAME" --yes || true
          git tag -d "$TAG_NAME" 2>/dev/null || true
          git push --delete origin "$TAG_NAME" 2>/dev/null || true
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo -e "- Bootloader: $(cat aboot/ver.txt)\n$(cat rootfs/info.md)\n\n$(git log -1 --format=%B)" > release_notes.md
          echo "NAME=$NAME" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Releases
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.version.outputs.NAME }}
          body_path: release_notes.md
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          files: |
            aboot/*.mbn
            kernel/*.img
            rootfs/rootfs.img.xz
